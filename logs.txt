ttached is a sample Apache log-file. Using standard command-line tools, parse the file to produce the following:

- The top 10 IPs making the most requests, displaying the IP address and number of requests made
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10  

Who is the owner of each of these IPs
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10 | cut -b 9- | xargs -l whois
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10 | cut -b 9- | xargs -i whois {} | grep OrgName 
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10 | cut -b 9- | xargs -i whois {} | grep -E 'customer|person|netname'

- Top 10 requested pages and the number of requests made for each
cut -d ' ' -f 7 access_log | sort | uniq -c | sort -nr | head -10

- Percentage of successful requests
total=$(wc -l < access_log)
ok=$(cut -d ' ' -f 9 access_log | sort | uniq -c | grep 200 | cut -b 5-8)
echo $((($ok * 100) / $total))

- Percentage of unsuccessful requests
total=$(wc -l < access_log)
fail=$(cut -d ' ' -f 9 access_log | sort | uniq -c | grep 404 | cut -b 4-8)
echo $((($fail * 100) / $total))

- The total number of requests made every minute in the time period covered
cut -d ' ' -f 4 access_log | cut -d : -f 1-3 | sort | uniq -c

- For each of the top 10 IPs, show the top 5 pages requested and the number of requests for each
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10 | cut -b 9- > lista_ip
while read i ; do grep $i access_log | cut -d ' ' -f 7 | sort | uniq -c | sort -nr | head -5 ; done < lista_ip

- Generate an ASCII bar-chart showing the number of requests per minute
cut -d ' ' -f 4 access_log | cut -d : -f 1-3 | sort | uniq -c | cut -b 7 > log_accesari
while read i ; do printf '%*s' $i | tr ' ' '*' ; printf '\n'; done < log_accesari

xtra
cut -f 1 -d - access_log | sort | uniq -c | sort -nr | head -10 
cut -d ' ' -f 4 access_log | sort | uniq -c | cut -d : -f 1-3 
